// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here: jose vitor
    DMux4Way(in=load, sel=address[0..1], a=r4kA, b=r4kB, c=r4kC, d=r4kD);
    RAM4K(in=in, load=r4kA, address=address[2..13], out=r4kAOut);
    RAM4K(in=in, load=r4kB, address=address[2..13], out=r4kBOut);
    RAM4K(in=in, load=r4kC, address=address[2..13], out=r4kCOut);
    RAM4K(in=in, load=r4kD, address=address[2..13], out=r4kDOut);
    Mux4Way16(a=r4kAOut, b=r4kBOut, c=r4kCOut, d=r4kDOut, sel=address[0..1], out=out);
}
