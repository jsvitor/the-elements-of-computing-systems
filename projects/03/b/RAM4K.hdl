// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=ram512A, b=ram512B, c=ram512C, d=ram512D, e=ram512E, f=ram512F, g=ram512G, h=ram512H);
    RAM512(in=in, load=ram512A, address=address[3..11], out=ram512AOut);
    RAM512(in=in, load=ram512B, address=address[3..11], out=ram512BOut);
    RAM512(in=in, load=ram512C, address=address[3..11], out=ram512COut);
    RAM512(in=in, load=ram512D, address=address[3..11], out=ram512DOut);
    RAM512(in=in, load=ram512E, address=address[3..11], out=ram512EOut);
    RAM512(in=in, load=ram512F, address=address[3..11], out=ram512FOut);
    RAM512(in=in, load=ram512G, address=address[3..11], out=ram512GOut);
    RAM512(in=in, load=ram512H, address=address[3..11], out=ram512HOut);
    Mux8Way16(a=ram512AOut, b=ram512BOut, c=ram512COut, d=ram512DOut, e=ram512EOut, f=ram512FOut, g=ram512GOut, h=ram512HOut, sel=address[0..2], out=out);
}
